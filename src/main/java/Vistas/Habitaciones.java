/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import DAO.HabitacionesDAO;
import DTO.HabitacionesDTO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodrigo
 */
public class Habitaciones extends javax.swing.JFrame {

    /**
     * Creates new form Habitaciones
     */
    public Habitaciones() {
        initComponents();
        llenarTablaHabitaciones();
        
    jTbHabitaciones.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    @Override
    public void valueChanged(ListSelectionEvent e) {
        
        int selectedRow = jTbHabitaciones.getSelectedRow();
        
        if (selectedRow != -1) {
            
            String tipo = (String) jTbHabitaciones.getValueAt(selectedRow, 1); 
            double precio = (Double) jTbHabitaciones.getValueAt(selectedRow, 2); 
            int capacidad = (Integer) jTbHabitaciones.getValueAt(selectedRow, 3); 
            
            jTxtTipo.setText(tipo);
            jTxtPrecio.setText(String.valueOf(precio));
            jTxtCapacidad.setText(String.valueOf(capacidad));
        }
    }
});


    }
private void llenarTablaHabitaciones() {
        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("ID Habitacion");
        modelo.addColumn("Tipo");
        modelo.addColumn("Precio");
        modelo.addColumn("Capacidad");

        HabitacionesDAO dao = new HabitacionesDAO();
        List<HabitacionesDTO> listaHabitaciones = dao.obtenerHabitaciones();

        for (HabitacionesDTO habitacion : listaHabitaciones) {
            Object[] fila = new Object[4];
            fila[0] = habitacion.getIdHabitacion();
            fila[1] = habitacion.getTipo();
            fila[2] = habitacion.getPrecio();
            fila[3] = habitacion.getCapacidad();

            modelo.addRow(fila);
        }

        jTbHabitaciones.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Tipo = new javax.swing.JLabel();
        Precio = new javax.swing.JLabel();
        Capacidad = new javax.swing.JLabel();
        jTxtTipo = new javax.swing.JTextField();
        jTxtPrecio = new javax.swing.JTextField();
        jTxtCapacidad = new javax.swing.JTextField();
        jBtnAgregar = new javax.swing.JButton();
        jBtnEditar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jBtnRegresar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbHabitaciones = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tipo.setText("Tipo");

        Precio.setText("Precio");

        Capacidad.setText("Capacidad");

        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });

        jBtnEditar.setText("Editar");
        jBtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditarActionPerformed(evt);
            }
        });

        jBtnEliminar.setText("Eliminar");
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });

        jBtnRegresar.setText("Regresar");
        jBtnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tipo)
                    .addComponent(Precio)
                    .addComponent(Capacidad))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtTipo)
                    .addComponent(jTxtPrecio)
                    .addComponent(jTxtCapacidad, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnRegresar)
                    .addComponent(jBtnAgregar)
                    .addComponent(jBtnEditar)
                    .addComponent(jBtnEliminar))
                .addGap(43, 43, 43))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tipo)
                    .addComponent(jTxtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnAgregar))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Precio)
                    .addComponent(jTxtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEditar))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Capacidad)
                            .addComponent(jTxtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jBtnEliminar)))
                .addGap(18, 18, 18)
                .addComponent(jBtnRegresar)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTbHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTbHabitaciones);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRegresarActionPerformed
        this.dispose();
        Menu menu = new Menu();
        menu.setVisible(true);
    }//GEN-LAST:event_jBtnRegresarActionPerformed

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
           String tipo = jTxtTipo.getText().trim();
           String precioStr = jTxtPrecio.getText().trim();
           String capacidadStr = jTxtCapacidad.getText().trim();

    if (tipo.isEmpty() || precioStr.isEmpty() || capacidadStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        double precio = Double.parseDouble(precioStr);
        int capacidad = Integer.parseInt(capacidadStr);
        
        HabitacionesDTO nuevaHabitacion = new HabitacionesDTO(0, tipo, precio, capacidad);
        
        HabitacionesDAO habitacionesDAO = new HabitacionesDAO();
        
        boolean exito = habitacionesDAO.agregarHabitacion(nuevaHabitacion);
        
        if (exito) {
            JOptionPane.showMessageDialog(this, "Habitación agregada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            llenarTablaHabitaciones();
        } else {
            JOptionPane.showMessageDialog(this, "Hubo un error al agregar la habitación.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditarActionPerformed
         int selectedRow = jTbHabitaciones.getSelectedRow();
    
    if (selectedRow != -1) { 
        int idHabitacion = (int) jTbHabitaciones.getValueAt(selectedRow, 0);
        
        String tipo = jTxtTipo.getText().trim();
        String precioStr = jTxtPrecio.getText().trim();
        String capacidadStr = jTxtCapacidad.getText().trim();
        
        if (tipo.isEmpty() || precioStr.isEmpty() || capacidadStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            double precio = Double.parseDouble(precioStr);
            int capacidad = Integer.parseInt(capacidadStr);
            
            HabitacionesDTO habitacion = new HabitacionesDTO(idHabitacion, tipo, precio, capacidad);
            
            HabitacionesDAO habitacionesDAO = new HabitacionesDAO();
            
            boolean exito = habitacionesDAO.editarHabitacion(habitacion);
            
            if (exito) {
                JOptionPane.showMessageDialog(this, "Habitación actualizada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                llenarTablaHabitaciones();
            } else {
                JOptionPane.showMessageDialog(this, "Hubo un error al actualizar la habitación.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una habitación de la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jBtnEditarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        int selectedRow = jTbHabitaciones.getSelectedRow();
    
    if (selectedRow != -1) { 
        int idHabitacion = (int) jTbHabitaciones.getValueAt(selectedRow, 0);
        
        HabitacionesDAO habitacionesDAO = new HabitacionesDAO();
        
        boolean exito = habitacionesDAO.eliminarHabitacion(idHabitacion);
        
        if (exito) {
            JOptionPane.showMessageDialog(this, "Habitación eliminada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            llenarTablaHabitaciones(); 
        } else {
            JOptionPane.showMessageDialog(this, "Hubo un error al eliminar la habitación.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, seleccione una habitación de la tabla.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Habitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Habitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Habitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Habitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Habitaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Capacidad;
    private javax.swing.JLabel Precio;
    private javax.swing.JLabel Tipo;
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnEditar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnRegresar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTbHabitaciones;
    private javax.swing.JTextField jTxtCapacidad;
    private javax.swing.JTextField jTxtPrecio;
    private javax.swing.JTextField jTxtTipo;
    // End of variables declaration//GEN-END:variables
}
